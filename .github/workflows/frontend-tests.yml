name: CI-CD Frontend Tests, Coverage, Quality Analysis, Docker Build and Push

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
    paths:
      - 'front/**'
      - '.github/workflows/frontend-tests.yml'

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run Angular tests and coverage
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload frontend test results
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test-results
          path: front/coverage

  sonarcloud-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Run tests and generate coverage
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_FRONTEND }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/app:latest
